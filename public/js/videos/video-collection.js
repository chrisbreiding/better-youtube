// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'underscore', 'services/vent', 'services/youtube', 'videos/video-model'], function(Backbone, _, vent, youtube, VideoModel) {
    var VideoCollection;
    VideoCollection = (function(_super) {

      __extends(VideoCollection, _super);

      function VideoCollection() {
        this.addVideo = __bind(this.addVideo, this);

        this.loadVideos = __bind(this.loadVideos, this);
        return VideoCollection.__super__.constructor.apply(this, arguments);
      }

      VideoCollection.prototype.model = VideoModel;

      VideoCollection.prototype.initialize = function() {
        var _this = this;
        return vent.on('subscription:load', function(channelId) {
          return youtube.getVideosByChannel(channelId).done(_this.loadVideos);
        });
      };

      VideoCollection.prototype.loadVideos = function(results) {
        this.reset();
        return _.each(results.feed.entry, this.addVideo);
      };

      VideoCollection.prototype.addVideo = function(video) {
        return this.add(youtube.mapVideoDetails(video));
      };

      return VideoCollection;

    })(Backbone.Collection);
    return new VideoCollection;
  });

}).call(this);
